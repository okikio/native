---
// import { Markdown } from 'astro/components';
// import { Markdown } from 'astro/components';
import Markdown from "../components/Markdown.astro";
import BaseLayout from "../layouts/BaseLayout.astro";

import { globby } from 'globby';
import { readFileSync } from "node:fs";

export async function getStaticPaths() {
    let res = await globby(["docs/**/*.md", "!docs/api"]);
    let pages = res.map(x => {
        return { 
            path: x, 
            page: x
              .replace(/^docs\//, "")
              .replace(/\.md$/, "")
        }
    });

    let result = pages.map(x => {
      const { page, path } = x;
      const content = readFileSync(`${path}`, "utf-8");
      return { params: { page }, props: { content } }
    });
    
    result.forEach(v => {
      if (/\/index$/.test(v.params.page)) {
        result.push({ ...v, params: { page: v.params.page.replace(/\/index$/, "") } })
      }
    })
    
    return result;
}

const {content} = Astro.props;
let pathArr = Astro.request.params.page.split("/");
let title = content.match(/\#{1,6}(.*)/)?.[1]?.trim() ?? "Homepage";
let pkg = "@okikio/" + pathArr[0];
---

<BaseLayout title={`${title}${ pkg == title ? "" : " - " + pkg}`}>
  <div>
    <p>
      <span><a href="/">Home</a>{ pathArr.length ? " / " : "" }</span>
      {pathArr.map((path, i) => {
        return `<a href="/${pathArr.slice(0, i + 1).join("/")}">${path}</a>` 
      }).join(" / ")}
    </p> 

    <article main-content>
      <Markdown content={content} />
    </article> 
  </div>
</BaseLayout>